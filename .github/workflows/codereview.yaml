name: Code Review

on:
  pull_request:
    branches: [ 'main' ]

jobs:
  only_user_errors:
    name: errorw-bot
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - uses: reviewdog/action-setup@v1

      - name: Check
        shell: bash
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
        run: |-
          set -eEu
          set +o pipefail

          grep --recursive --line-number --exclude-dir=.git --exclude-dir=.github ".Errorw" . |
          reviewdog -efm="%f:%l:%m" \
            -name="errorw-bot" \
            -reporter="github-pr-review" \
            -filter-mode="added" \
            -fail-on-error="false" \
            -level="warning"

  controller_error_without_return:
    name: controller-returns
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - uses: reviewdog/action-setup@v1

      - name: Install pcregrep
        run: sudo apt-get -yqq install pcregrep

      - name: Check
        shell: bash
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
        run: |-
          set -eEu
          set +o pipefail

          pcregrep \
            --recursive \
            --line-number --multiline \
            --include '.+\.go$' \
            '\b(Back|InternalError|NotFound|Unauthorized|MissingRealm|MissingAuthorizedApp|MissingSession|MissingUser|RedirectToMFA|RedirectToChangePassword)\(.+\)\s+(//.*\s+)?^((?!return).)*$' \
            . | \
          reviewdog -efm="%f:%l:%m" \
            -name="controller-returns" \
            -reporter="github-pr-review" \
            -filter-mode="diff_context" \
            -fail-on-error="true" \
            -level="error"
