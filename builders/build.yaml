# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# Builds a container image.
#
timeout: '1200s'
options:
  # N1_HIGHCPU_32 builds faster, but takes much longer to provision.
  machineType: 'N1_HIGHCPU_8'
  env:
  - 'GOPATH=/go'
  - 'GO111MODULE=on'
  - 'GOPROXY=https://proxy.golang.org,direct'
  - 'CGO_ENABLED=0'
  - 'GOOS=linux'
  - 'GOARCH=amd64'
  volumes:
  - name: 'go-modules'
    path: '/go/pkg'

substitutions:
  _BINAUTHZ_ATTESTOR:
  _BINAUTHZ_KEY_VERSION:
  _REPO: 'github.com/google/exposure-notifications-verification-server'
  _TAG:

steps:
- id: 'restore-cache'
  name: 'us-docker.pkg.dev/vargolabs/gcs-cacher/gcs-cacher:0.1'
  args:
  - '-bucket=${PROJECT_ID}-cloudbuild-cache'
  - '-restore=go-{{ hashGlob "go.mod" }}'
  - '-restore=go-'
  - '-dir=/go/pkg'
  - '-allow-failure'

- id: 'download-modules'
  name: 'golang:1.15.2'
  args:
  - 'go'
  - 'install'
  - './...'
  waitFor:
  - 'restore-cache'

- id: 'save-cache'
  name: 'us-docker.pkg.dev/vargolabs/gcs-cacher/gcs-cacher:0.1'
  args:
  - '-bucket=${PROJECT_ID}-cloudbuild-cache'
  - '-cache=go-{{ hashGlob "go.mod" }}'
  - '-dir=/go/pkg'
  waitFor:
  - 'download-modules'

#
# build all binaries at once
#
- id: 'mkdir-bin'
  name: 'bash:5'
  args:
  - 'mkdir'
  - 'bin'

- id: 'build'
  name: 'golang:1.15.2'
  args:
  - 'go'
  - 'build'
  - '-trimpath'
  - '-ldflags=-s -w -X=${_REPO}/pkg/buildinfo.BuildID=${BUILD_ID} -X=${_REPO}/pkg/buildinfo.BuildTag=${_TAG} -extldflags=-static'
  - '-o=./bin/'
  - './cmd/...'
  waitFor:
  - 'mkdir-bin'
  - 'download-modules'

#
# adminapi
#
- id: 'dockerize-adminapi'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/adminapi:${_TAG}'
  - '--build-arg=SERVICE=adminapi'
  - '.'
  waitFor:
  - 'build'

- id: 'push-adminapi'
  name: 'docker:19'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/adminapi:${_TAG}'
  waitFor:
  - 'dockerize-adminapi'

- id: 'attest-adminapi'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/adminapi:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-adminapi'

#
# apiserver
#
- id: 'dockerize-apiserver'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/apiserver:${_TAG}'
  - '--build-arg=SERVICE=apiserver'
  - '.'
  waitFor:
  - 'build'

- id: 'push-apiserver'
  name: 'docker:19'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/apiserver:${_TAG}'
  waitFor:
  - 'dockerize-apiserver'

- id: 'attest-apiserver'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/apiserver:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-apiserver'


#
# appsync
#
- id: 'dockerize-appsync'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/appsync:${_TAG}'
  - '--build-arg=SERVICE=appsync'
  - '.'
  waitFor:
  - 'build'

- id: 'push-appsync'
  name: 'docker:19'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/appsync:${_TAG}'
  waitFor:
  - 'dockerize-appsync'

- id: 'attest-appsync'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/appsync:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-appsync'


#
# cleanup
#
- id: 'dockerize-cleanup'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/cleanup:${_TAG}'
  - '--build-arg=SERVICE=cleanup'
  - '.'
  waitFor:
  - 'build'

- id: 'push-cleanup'
  name: 'docker:19'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/cleanup:${_TAG}'
  waitFor:
  - 'dockerize-cleanup'

- id: 'attest-cleanup'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/cleanup:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-cleanup'


#
# e2e-runner
#
- id: 'dockerize-e2e-runner'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/e2e-runner:${_TAG}'
  - '--build-arg=SERVICE=e2e-runner'
  - '.'
  waitFor:
  - 'build'

- id: 'push-e2e-runner'
  name: 'docker:19'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/e2e-runner:${_TAG}'
  waitFor:
  - 'dockerize-e2e-runner'

- id: 'attest-e2e-runner'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/e2e-runner:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-e2e-runner'


#
# enx-redirect
#
- id: 'dockerize-enx-redirect'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/enx-redirect.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/enx-redirect:${_TAG}'
  - '.'
  waitFor:
  - 'build'

- id: 'push-enx-redirect'
  name: 'docker:19'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/enx-redirect:${_TAG}'
  waitFor:
  - 'dockerize-enx-redirect'

- id: 'attest-enx-redirect'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/enx-redirect:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-enx-redirect'


#
# migrate
#
- id: 'dockerize-migrate'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/migrate.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/migrate:${_TAG}'
  - '.'
  waitFor:
  - 'build'

- id: 'push-migrate'
  name: 'docker:19'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/migrate:${_TAG}'
  waitFor:
  - 'dockerize-migrate'

- id: 'attest-migrate'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/migrate:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-migrate'


#
# modeler
#
- id: 'dockerize-modeler'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/modeler:${_TAG}'
  - '--build-arg=SERVICE=modeler'
  - '.'
  waitFor:
  - 'build'

- id: 'push-modeler'
  name: 'docker:19'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/modeler:${_TAG}'
  waitFor:
  - 'dockerize-modeler'

- id: 'attest-modeler'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/modeler:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-modeler'


#
# rotation
#
- id: 'dockerize-rotation'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/rotation:${_TAG}'
  - '--build-arg=SERVICE=rotation'
  - '.'
  waitFor:
  - 'build'

- id: 'push-rotation'
  name: 'docker:19'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/rotation:${_TAG}'
  waitFor:
  - 'dockerize-rotation'

- id: 'attest-rotation'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/rotation:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-rotation'


#
# server
#
- id: 'dockerize-server'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/server.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/server:${_TAG}'
  - '.'
  waitFor:
  - 'build'

- id: 'push-server'
  name: 'docker:19'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/server:${_TAG}'
  waitFor:
  - 'dockerize-server'

- id: 'attest-server'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/server:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-server'


#
# stats-puller
#
- id: 'dockerize-stats-puller'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/stats-puller:${_TAG}'
  - '--build-arg=SERVICE=stats-puller'
  - '.'
  waitFor:
  - 'build'

- id: 'push-stats-puller'
  name: 'docker:19'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/stats-puller:${_TAG}'
  waitFor:
  - 'dockerize-stats-puller'

- id: 'attest-stats-puller'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/stats-puller:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-stats-puller'
