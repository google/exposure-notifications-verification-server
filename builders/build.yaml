# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# Builds a container image.
#
options:
  # N1_HIGHCPU_32 builds faster, but takes much longer to provision.
  machineType: 'N1_HIGHCPU_8'
  env:
  - 'GOPATH=/go'
  - 'GO111MODULE=on'
  - 'GOPROXY=https://proxy.golang.org,direct'
  - 'CGO_ENABLED=0'
  - 'GOOS=linux'
  - 'GOARCH=amd64'
  volumes:
  - name: 'go-modules'
    path: '/go/pkg'

substitutions:
  _REPO: 'github.com/google/exposure-notifications-verification-server'
  _TAG:

steps:
- id: 'restore-cache'
  name: 'us-docker.pkg.dev/vargolabs/gcs-cacher/gcs-cacher:0.1'
  args:
  - '-bucket=${PROJECT_ID}-cloudbuild-cache'
  - '-restore=go-{{ hashGlob "go.mod" }}'
  - '-restore=go-'
  - '-dir=/go/pkg'
  - '-allow-failure'

- id: 'download-modules'
  name: 'golang:1.15.2'
  args:
  - 'go'
  - 'mod'
  - 'download'
  - '-x'
  waitFor:
  - 'restore-cache'

- id: 'save-cache'
  name: 'us-docker.pkg.dev/vargolabs/gcs-cacher/gcs-cacher:0.1'
  args:
  - '-bucket=${PROJECT_ID}-cloudbuild-cache'
  - '-cache=go-{{ hashGlob "go.mod" }}'
  - '-dir=/go/pkg'
  waitFor:
  - 'download-modules'

#
# adminapi
#
- id: 'build-adminapi'
  name: 'golang:1.15.2'
  args:
  - 'go'
  - 'build'
  - '-trimpath'
  - '-ldflags=-s -w -X=${_REPO}/pkg/buildinfo.BuildID=${BUILD_ID} -X=${_REPO}/pkg/buildinfo.BuildTag=${_TAG} -extldflags=-static'
  - '-o=./bin/adminapi'
  - './cmd/adminapi'
  waitFor:
  - 'download-modules'

- id: 'dockerize-adminapi'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/adminapi:${_TAG}'
  - '--build-arg=SERVICE=adminapi'
  - '.'
  waitFor:
  - 'build-adminapi'

#
# apiserver
#
- id: 'build-apiserver'
  name: 'golang:1.15.2'
  args:
  - 'go'
  - 'build'
  - '-trimpath'
  - '-ldflags=-s -w -X=${_REPO}/pkg/buildinfo.BuildID=${BUILD_ID} -X=${_REPO}/pkg/buildinfo.BuildTag=${_TAG} -extldflags=-static'
  - '-o=./bin/apiserver'
  - './cmd/apiserver'
  waitFor:
  - 'download-modules'

- id: 'dockerize-apiserver'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/apiserver:${_TAG}'
  - '--build-arg=SERVICE=apiserver'
  - '.'
  waitFor:
  - 'build-apiserver'

#
# cleanup
#
- id: 'build-cleanup'
  name: 'golang:1.15.2'
  args:
  - 'go'
  - 'build'
  - '-trimpath'
  - '-ldflags=-s -w -X=${_REPO}/pkg/buildinfo.BuildID=${BUILD_ID} -X=${_REPO}/pkg/buildinfo.BuildTag=${_TAG} -extldflags=-static'
  - '-o=./bin/cleanup'
  - './cmd/cleanup'
  waitFor:
  - 'download-modules'

- id: 'dockerize-cleanup'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/cleanup:${_TAG}'
  - '--build-arg=SERVICE=cleanup'
  - '.'
  waitFor:
  - 'build-cleanup'

#
# e2e-runner
#
- id: 'build-e2e-runner'
  name: 'golang:1.15.2'
  args:
  - 'go'
  - 'build'
  - '-trimpath'
  - '-ldflags=-s -w -X=${_REPO}/pkg/buildinfo.BuildID=${BUILD_ID} -X=${_REPO}/pkg/buildinfo.BuildTag=${_TAG} -extldflags=-static'
  - '-o=./bin/e2e-runner'
  - './cmd/e2e-runner'
  waitFor:
  - 'download-modules'

- id: 'dockerize-e2e-runner'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/e2e-runner:${_TAG}'
  - '--build-arg=SERVICE=e2e-runner'
  - '.'
  waitFor:
  - 'build-e2e-runner'

#
# enx-redirect
#
- id: 'build-enx-redirect'
  name: 'golang:1.15.2'
  args:
  - 'go'
  - 'build'
  - '-trimpath'
  - '-ldflags=-s -w -X=${_REPO}/pkg/buildinfo.BuildID=${BUILD_ID} -X=${_REPO}/pkg/buildinfo.BuildTag=${_TAG} -extldflags=-static'
  - '-o=./bin/enx-redirect'
  - './cmd/enx-redirect'
  waitFor:
  - 'download-modules'

- id: 'dockerize-enx-redirect'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/enx-redirect.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/enx-redirect:${_TAG}'
  - '.'
  waitFor:
  - 'build-enx-redirect'

#
# migrate
#
- id: 'build-migrate'
  name: 'golang:1.15.2'
  args:
  - 'go'
  - 'build'
  - '-trimpath'
  - '-ldflags=-s -w -X=${_REPO}/pkg/buildinfo.BuildID=${BUILD_ID} -X=${_REPO}/pkg/buildinfo.BuildTag=${_TAG} -extldflags=-static'
  - '-o=./bin/migrate'
  - './cmd/migrate'
  waitFor:
  - 'download-modules'

- id: 'dockerize-migrate'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/migrate.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/migrate:${_TAG}'
  - '.'
  waitFor:
  - 'build-migrate'

#
# modeler
#
- id: 'build-modeler'
  name: 'golang:1.15.2'
  args:
  - 'go'
  - 'build'
  - '-trimpath'
  - '-ldflags=-s -w -X=${_REPO}/pkg/buildinfo.BuildID=${BUILD_ID} -X=${_REPO}/pkg/buildinfo.BuildTag=${_TAG} -extldflags=-static'
  - '-o=./bin/modeler'
  - './cmd/modeler'
  waitFor:
  - 'download-modules'

- id: 'dockerize-modeler'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/modeler:${_TAG}'
  - '--build-arg=SERVICE=modeler'
  - '.'
  waitFor:
  - 'build-modeler'

#
# server
#
- id: 'build-server'
  name: 'golang:1.15.2'
  args:
  - 'go'
  - 'build'
  - '-trimpath'
  - '-ldflags=-s -w -X=${_REPO}/pkg/buildinfo.BuildID=${BUILD_ID} -X=${_REPO}/pkg/buildinfo.BuildTag=${_TAG} -extldflags=-static'
  - '-o=./bin/server'
  - './cmd/server'
  waitFor:
  - 'download-modules'

- id: 'dockerize-server'
  name: 'docker:19'
  args:
  - 'build'
  - '--file=builders/server.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/server:${_TAG}'
  - '.'
  waitFor:
  - 'build-server'

images:
- 'gcr.io/${PROJECT_ID}/${_REPO}/adminapi:${_TAG}'
- 'gcr.io/${PROJECT_ID}/${_REPO}/apiserver:${_TAG}'
- 'gcr.io/${PROJECT_ID}/${_REPO}/cleanup:${_TAG}'
- 'gcr.io/${PROJECT_ID}/${_REPO}/e2e-runner:${_TAG}'
- 'gcr.io/${PROJECT_ID}/${_REPO}/enx-redirect:${_TAG}'
- 'gcr.io/${PROJECT_ID}/${_REPO}/migrate:${_TAG}'
- 'gcr.io/${PROJECT_ID}/${_REPO}/modeler:${_TAG}'
- 'gcr.io/${PROJECT_ID}/${_REPO}/server:${_TAG}'
