# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# Deploys a Cloud Run service.
#

substitutions:
  _REGION:
  _REPO: 'github.com/google/exposure-notifications-verification-server'
  _TAG:

steps:
#
# adminapi
#
- id: 'deploy-adminapi'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0-alpine'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    gcloud run deploy "adminapi" \
      --quiet \
      --project "${PROJECT_ID}" \
      --platform "managed" \
      --region "${_REGION}" \
      --image "gcr.io/${PROJECT_ID}/${_REPO}/adminapi:${_TAG}" \
      --no-traffic
  waitFor:
  - '-'

#
# apiserver
#
- id: 'deploy-apiserver'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0-alpine'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    gcloud run deploy "apiserver" \
      --quiet \
      --project "${PROJECT_ID}" \
      --platform "managed" \
      --region "${_REGION}" \
      --image "gcr.io/${PROJECT_ID}/${_REPO}/apiserver:${_TAG}" \
      --no-traffic
  waitFor:
  - '-'

#
# appsync
#
- id: 'deploy-appsync'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0-alpine'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    gcloud run deploy "appsync" \
      --quiet \
      --project "${PROJECT_ID}" \
      --platform "managed" \
      --region "${_REGION}" \
      --image "gcr.io/${PROJECT_ID}/${_REPO}/appsync:${_TAG}" \
      --no-traffic
  waitFor:
  - '-'

#
# cleanup
#
- id: 'deploy-cleanup'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0-alpine'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    gcloud run deploy "cleanup" \
      --quiet \
      --project "${PROJECT_ID}" \
      --platform "managed" \
      --region "${_REGION}" \
      --image "gcr.io/${PROJECT_ID}/${_REPO}/cleanup:${_TAG}" \
      --no-traffic
  waitFor:
  - '-'

#
# e2e-runner
#
- id: 'deploy-e2e-runner'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0-alpine'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    gcloud run deploy "e2e-runner" \
      --quiet \
      --project "${PROJECT_ID}" \
      --platform "managed" \
      --region "${_REGION}" \
      --image "gcr.io/${PROJECT_ID}/${_REPO}/e2e-runner:${_TAG}" \
      --no-traffic
  waitFor:
  - '-'

#
# enx-redirect
#
- id: 'deploy-enx-redirect'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0-alpine'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    gcloud run deploy "enx-redirect" \
      --quiet \
      --project "${PROJECT_ID}" \
      --platform "managed" \
      --region "${_REGION}" \
      --image "gcr.io/${PROJECT_ID}/${_REPO}/enx-redirect:${_TAG}" \
      --no-traffic
  waitFor:
  - '-'

#
# modeler
#
- id: 'deploy-modeler'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0-alpine'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    gcloud run deploy "modeler" \
      --quiet \
      --project "${PROJECT_ID}" \
      --platform "managed" \
      --region "${_REGION}" \
      --image "gcr.io/${PROJECT_ID}/${_REPO}/modeler:${_TAG}" \
      --no-traffic
  waitFor:
  - '-'


#
# rotation
#
- id: 'deploy-rotation'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0-alpine'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    gcloud run deploy "rotation" \
      --quiet \
      --project "${PROJECT_ID}" \
      --platform "managed" \
      --region "${_REGION}" \
      --image "gcr.io/${PROJECT_ID}/${_REPO}/rotation:${_TAG}" \
      --no-traffic
  waitFor:
  - '-'


#
# server
#
- id: 'deploy-server'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0-alpine'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    gcloud run deploy "server" \
      --quiet \
      --project "${PROJECT_ID}" \
      --platform "managed" \
      --region "${_REGION}" \
      --image "gcr.io/${PROJECT_ID}/${_REPO}/server:${_TAG}" \
      --no-traffic
  waitFor:
  - '-'


#
# stats-puller
#
- id: 'deploy-stats-puller'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:324.0.0-alpine'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    gcloud run deploy "stats-puller" \
      --quiet \
      --project "${PROJECT_ID}" \
      --platform "managed" \
      --region "${_REGION}" \
      --image "gcr.io/${PROJECT_ID}/${_REPO}/stats-puller:${_TAG}" \
      --no-traffic
  waitFor:
  - '-'
